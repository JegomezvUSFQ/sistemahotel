javaCopiarEditar// Clase base
class Habitacion {
    private int numero; // Encapsulamiento
    private int capacidad;
    private double precio;

    public Habitacion(int numero, int capacidad, double precio) {
        this.numero = numero;
        this.capacidad = capacidad;
        this.precio = precio;
    }

    public int getCapacidad() {
        return capacidad;
    }

    public double getPrecio() {
        return precio;
    }
}

// Subclase para habitaciones estándar
class HabitacionEstandar extends Habitacion {
    public HabitacionEstandar(int numero) {
        super(numero, 2, 50.0); // Capacidad: 2, Precio: 50
    }
}

// Subclase para habitaciones de lujo
class HabitacionDeluxe extends Habitacion {
    public HabitacionDeluxe(int numero) {
        super(numero, 4, 120.0); // Capacidad: 4, Precio: 120
    }
}

// Main
public class Main {
    public static void main(String[] args) {
        Habitacion estandar = new HabitacionEstandar(101);
        Habitacion deluxe = new HabitacionDeluxe(202);

        System.out.println("Habitación estándar - Precio: " + estandar.getPrecio() + " USD, Capacidad: " + estandar.getCapacidad());
        System.out.println("Habitación deluxe - Precio: " + deluxe.getPrecio() + " USD, Capacidad: " + deluxe.getCapacidad());
    }
}
3. Gestión de Innovación
Ejercicio: Herencia
Crea una clase base ProyectoInnovacion y extiende para representar proyectos de investigación, desarrollo de productos y patentes.

Código:
javaCopiarEditar// Clase base
class ProyectoInnovacion {
    protected String nombre;
    protected String lider;
    protected double presupuesto;

    public ProyectoInnovacion(String nombre, String lider, double presupuesto) {
        this.nombre = nombre;
        this.lider = lider;
        this.presupuesto = presupuesto;
    }

    public String resumen() {
        return "Proyecto '" + nombre + "' liderado por " + lider + ". Presupuesto: " + presupuesto + " USD.";
    }
}

// Subclase para proyectos de investigación
class ProyectoInvestigacion extends ProyectoInnovacion {
    private String tema;

    public ProyectoInvestigacion(String nombre, String lider, double presupuesto, String tema) {
        super(nombre, lider, presupuesto);
        this.tema = tema;
    }

    @Override
    public String resumen() {
        return super.resumen() + " Tema de investigación: " + tema + ".";
    }
}

// Subclase para proyectos de desarrollo de productos
class ProyectoProducto extends ProyectoInnovacion {
    private String productoFinal;

    public ProyectoProducto(String nombre, String lider, double presupuesto, String productoFinal) {
        super(nombre, lider, presupuesto);
        this.productoFinal = productoFinal;
    }

    @Override
    public String resumen() {
        return super.resumen() + " Producto final: " + productoFinal + ".";
    }
}

// Main
public class Main {
    public static void main(String[] args) {
        ProyectoInnovacion proyecto = new ProyectoInvestigacion("AI para Agricultura", "Ana Torres", 50000, "Uso de drones en cultivos");
        System.out.println(proyecto.resumen());
    }
}
